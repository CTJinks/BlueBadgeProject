A User is a Pokemon Trainer.

A Team is User merged with a Collection of Pokemon.

Pokemon is the existence of a "species" of Pokemon.

A Move is just that, and it has a Name and Damage done.

Individual Pokemon is the instance of a unique Pokemon with its own collection of Moves and other properties.

A Challenge Request is a request from one Team for a challenge for a given date. 

We may include the actual Challenge as a stretch goal.

ChallengeRequest

namespace PokeTrack.Data
{
    public class ChallengeRequest
    {
        public int RequestID { get; set; }
        [ForeignKey("Team")]
        public int TeamID { get; set; }
        public virtual Team ChallengeTeam { get; set; }
        public string RequestUser { get; set; }
        public DateTime ChallengeDate { get; set; }

        [Required]
        public DateTimeOffset CreatedUtc { get; set; }

        public DateTimeOffset? ModifiedUtc { get; set; }
    }
}

public class ChallengeRequestService
    {
        public bool CreateChallengeRequest(ChallengeRequestCreate model)
        {
            var entity =
                new ChallengeRequest()
                {
                    //Address
                    RequestUser = model.RequestUser,
                    CreatedUtc = DateTimeOffset.Now
                };

            using (var ctx = new ApplicationDbContext())
            {
                ctx.ChallengeDb.Add(entity);
                return ctx.SaveChanges() == 1;
            }
        }
        public IEnumerable<ChallengeRequestListItem> GetChallengeRequests()
        {
            using (var ctx = new ApplicationDbContext())
            {
                var query =
                    ctx
                        .ChallengeDb
                        .Where(e => e.RequestUser == e.RequestUser)
                        .Select(
                            e =>
                                new ChallengeRequestListItem
                                {
                                    RequestUser = e.RequestUser,
                                    PokemonList = e.PokemonList
                                }
                        );

                return query.ToArray();
            }
        }
    }
